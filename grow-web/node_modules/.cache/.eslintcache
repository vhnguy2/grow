[{"/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/index.js":"1","/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/App.js":"2","/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/reportWebVitals.js":"3","/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/WikiArticleForm.js":"4","/Users/vhnguy2/workspace/grow/grow-web/src/index.js":"5","/Users/vhnguy2/workspace/grow/grow-web/src/App.js":"6","/Users/vhnguy2/workspace/grow/grow-web/src/reportWebVitals.js":"7","/Users/vhnguy2/workspace/grow/grow-web/src/WikiArticleForm.js":"8"},{"size":535,"mtime":1668489580637,"results":"9","hashOfConfig":"10"},{"size":245,"mtime":1668491224818,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1668489580638,"results":"12","hashOfConfig":"10"},{"size":8674,"mtime":1668532709106,"results":"13","hashOfConfig":"10"},{"size":535,"mtime":1668489580637,"results":"14","hashOfConfig":"15"},{"size":245,"mtime":1668491224818,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1668489580638,"results":"17","hashOfConfig":"15"},{"size":8674,"mtime":1668532709106,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"si574b",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vhj4nj",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/index.js",[],[],[],"/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/App.js",[],[],"/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/reportWebVitals.js",[],[],"/Users/vhnguy2/workspace/vnguysoftware/grow-web/src/WikiArticleForm.js",["45"],[],"/Users/vhnguy2/workspace/grow/grow-web/src/index.js",[],[],"/Users/vhnguy2/workspace/grow/grow-web/src/App.js",[],[],"/Users/vhnguy2/workspace/grow/grow-web/src/reportWebVitals.js",[],[],"/Users/vhnguy2/workspace/grow/grow-web/src/WikiArticleForm.js",["46"],[],"import React from 'react';\n\nclass WikiArticleForm extends React.Component {\n\n  daysInMonth = {\n    \"01\" : 31,\n    \"02\" : 28,\n    \"03\" : 31,\n    \"04\" : 30,\n    \"05\" : 31,\n    \"06\" : 30,\n    \"07\" : 31,\n    \"08\" : 31,\n    \"09\" : 30,\n    \"10\" : 31,\n    \"11\" : 30,\n    \"12\" : 31\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      articleName: '',\n      month: '0',\n      year:'0',\n      day:'0',\n      mostViewedDayOfMonth:'',\n      topArticles: []\n    };\n\n    this.handleArticleNameChange = this.handleArticleNameChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleMonthChange = this.handleMonthChange.bind(this);\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmitTopArticles = this.handleSubmitTopArticles.bind(this);\n  }\n\n  handleArticleNameChange(event) {\n    this.setState({articleName: event.target.value});\n  }\n\n  handleMonthChange(event) {\n    this.setState({month: event.target.value});\n  }\n\n  handleYearChange(event) {\n    this.setState({year: event.target.value});\n  }\n\n  handleDayChange(event) {\n    this.setState({day: event.target.value});\n  }\n\n  handleSubmitTopArticles(event) {\n    event.preventDefault();\n\n    if (this.state.month === \"0\") {\n      alert(\"You must chose a month\");\n      return;\n    } else if (this.state.year === \"0\") {\n      alert(\"You must chose a year\");\n      return;\n    }\n\n    if (this.state.day !== \"0\") {\n      this.fetchTopArticlesForWeek();\n    } else {\n      this.fetchTopArticlesForMonth();\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // validate form\n    if (this.state.articleName.length === 0) {\n      alert(\"You must fill out the article name\");\n      return;\n    } else if (this.state.month === \"0\") {\n      alert(\"You must chose a month\");\n      return;\n    } else if (this.state.year === \"0\") {\n      alert(\"You must chose a year\");\n      return;\n    }\n\n    this.fetchMostViewedDayOfMonth();\n    this.fetchArticleViewCountForMonth();\n    if (this.state.day !== \"0\") {\n      this.fetchArticleViewCountForWeek();\n    }\n  }\n\n  fetchTopArticlesForMonth() {\n    var url = `/wiki/top/year/${this.state.year}/month/${this.state.month}`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({topArticles: result.articles});\n        },\n        (error) => {\n          console.log(error);\n        }\n      )\n      .catch((error) => {console.log(error)});\n  }\n\n  fetchTopArticlesForWeek() {\n    var url = `/wiki/top/year/${this.state.year}/month/${this.state.month}/week_start/${this.state.day}`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({topArticles: result.articles});\n        },\n        (error) => {\n          console.log(error);\n        }\n      )\n      .catch((error) => {console.log(error)});\n  }\n\n  fetchMostViewedDayOfMonth() {\n    var url = `/wiki/article/${this.state.articleName.trim()}/topDay/year/${this.state.year}/month/${this.state.month}`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({mostViewedDayOfMonth: result.dayOfMonthTimestamp});\n        },\n        (error) => {\n          console.log(error);\n        }\n      )\n      .catch((error) => {console.log(error)});\n  }\n\n  fetchArticleViewCountForMonth() {\n    var url = `/wiki/article/${this.state.articleName.trim()}/stats/year/${this.state.year}/month/${this.state.month}`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({articleMonthViewCount: result.viewCount});\n        },\n        (error) => {\n          console.log(error);\n        }\n      )\n      .catch((error) => {console.log(error)});\n  }\n\n  fetchArticleViewCountForWeek() {\n    var url = `/wiki/article/${this.state.articleName.trim()}/stats/year/${this.state.year}/month/${this.state.month}/week_start/${this.state.day}`;\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({articleWeekViewCount: result.viewCount});\n        },\n        (error) => {\n          console.log(error);\n        }\n      )\n      .catch((error) => {console.log(error)});\n  }\n\n  isLeapYear() {\n    var year = this.state.year;\n    if (year % 100 === 0) {\n      if (year % 400 === 0) {\n        return true;\n      }\n      return false;\n    }\n    if (year % 4 === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  isLeapMonth() {\n    return this.state.month === \"02\" && this.isLeapYear();\n  }\n\n  render() {\n    var days = [];\n    var articles = [];\n    if (this.state.month !== \"0\") {\n      days.push(<option key=\"0\" value=\"0\">--Day--</option>);\n      for (var i = 1 ; i <= this.daysInMonth[this.state.month] + (this.isLeapMonth() ? 1 : 0); i++) {\n        days.push(<option key={i} value={i}>{i}</option>);\n      }\n    }\n\n    if (this.state.topArticles.length > 0) {\n      this.state.topArticles.map((article) => {\n        articles.push(<tr><td>{article.rank}</td><td>{article.article}</td><td>{article.views}</td></tr>)\n      });\n    }\n\n    return (\n    <div>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Article Name:\n          <input type=\"text\" value={this.state.articleName} onChange={this.handleArticleNameChange} />\n        </label>\n\n        <br/>\n        <select value={this.state.year} onChange={this.handleYearChange}>\n          <option value=\"0\">--Year--</option>\n          <option value=\"2016\">2016</option>\n          <option value=\"2017\">2017</option>\n          <option value=\"2018\">2018</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n        <select value={this.state.month} onChange={this.handleMonthChange}>\n          <option value=\"0\">--Month--</option>\n          <option value=\"01\">Jan</option>\n          <option value=\"02\">Feb</option>\n          <option value=\"03\">Mar</option>\n          <option value=\"04\">Apr</option>\n          <option value=\"05\">May</option>\n          <option value=\"06\">Jun</option>\n          <option value=\"07\">Jul</option>\n          <option value=\"08\">Aug</option>\n          <option value=\"09\">Sep</option>\n          <option value=\"10\">Oct</option>\n          <option value=\"11\">Nov</option>\n          <option value=\"12\">Dec</option>\n        </select>\n        <select value={this.state.day} onChange={this.handleDayChange}>\n          {days}\n        </select>\n        <br/>\n\n        <input type=\"submit\" value=\"Get article stats\" />\n      </form>\n      <span id='articleMostViewedDayOfMonth'>\n        Article most viewed date: {this.state.mostViewedDayOfMonth}\n      </span>\n      <br/>\n      <span id='articleViewCountForMonth'>\n        Article month view count: {this.state.articleMonthViewCount}\n      </span>\n      <br/>\n      <span id='articleViewCountForWeek'>\n        Article week view count: {this.state.articleWeekViewCount}\n      </span>\n\n      <br/>\n      <br/>\n\n      <form onSubmit={this.handleSubmitTopArticles}>\n        <select value={this.state.year} onChange={this.handleYearChange}>\n          <option value=\"0\">--Year--</option>\n          <option value=\"2016\">2016</option>\n          <option value=\"2017\">2017</option>\n          <option value=\"2018\">2018</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n        <select value={this.state.month} onChange={this.handleMonthChange}>\n          <option value=\"0\">--Month--</option>\n          <option value=\"01\">Jan</option>\n          <option value=\"02\">Feb</option>\n          <option value=\"03\">Mar</option>\n          <option value=\"04\">Apr</option>\n          <option value=\"05\">May</option>\n          <option value=\"06\">Jun</option>\n          <option value=\"07\">Jul</option>\n          <option value=\"08\">Aug</option>\n          <option value=\"09\">Sep</option>\n          <option value=\"10\">Oct</option>\n          <option value=\"11\">Nov</option>\n          <option value=\"12\">Dec</option>\n        </select>\n        <select value={this.state.day} onChange={this.handleDayChange}>\n          {days}\n        </select>\n        <br/>\n\n        <input type=\"submit\" value=\"Get top articles\" />\n      </form>\n      <br/>\n      <table>\n        <tr>\n          <th>Rank</th>\n          <th>Article</th>\n          <th>Views</th>\n        </tr>\n        {articles}\n      </table>\n      {articles}\n    </div>\n    );\n  }\n}\n\nexport default WikiArticleForm;\n",{"ruleId":"47","severity":1,"message":"48","line":199,"column":44,"nodeType":"49","messageId":"50","endLine":199,"endColumn":46},{"ruleId":"47","severity":1,"message":"48","line":199,"column":44,"nodeType":"49","messageId":"50","endLine":199,"endColumn":46},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]